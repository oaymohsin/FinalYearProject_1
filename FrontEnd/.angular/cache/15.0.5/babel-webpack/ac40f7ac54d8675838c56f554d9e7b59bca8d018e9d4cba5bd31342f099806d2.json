{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild, ViewChildren } from '@angular/core';\nimport { FormArray, FormControl, Validators } from '@angular/forms';\nlet ProductsComponent = class ProductsComponent {\n  constructor(formBuilder, ProductService) {\n    this.formBuilder = formBuilder;\n    this.ProductService = ProductService;\n    this.selectsize = [\"S\", \"M\", \"L\", \"XL\"];\n    this.cateogaries = [\"Stationary\", \"Bags\", \"Others\"];\n    this.selectcolor = [\"Red\", \"Green\", \"Yellow\", \"Blue\"];\n    this.getsizearray = [];\n    this.imageArray = [];\n    this.buildform();\n  }\n  buildform() {\n    this.createproductform = this.formBuilder.group({\n      productname: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]),\n      productquantity: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\n      productprice: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\n      description: new FormControl('', Validators.required),\n      color: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z]+$/)]),\n      companyname: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z]+$/)]),\n      productcateogary: new FormControl('', Validators.required),\n      size: new FormArray([])\n      // productMaterial: new FormControl('', Validators.required)\n    });\n  }\n\n  getsize(event) {\n    // this.createproductform.reset();\n    event.target.checked ? this.getsizearray.push(event.target.value) : this.getsizearray.filter(value => value != event.target.value);\n    // console.log(event);\n  }\n\n  getImages(event) {\n    let filelength = event.target.files.length;\n    if (filelength <= 5) {\n      [...event.target.files].forEach(file => this.imageArray.push(file));\n      console.log(this.imageArray);\n      console.log(this.fileselect);\n    } else {\n      this.imageArray = [];\n      this.fileselect.nativeElement.value = null;\n    }\n  }\n  createproduct() {\n    //creating form controls for every size\n    // console.log(this.getsizearray)\n    // console.log(this.createproductform.get('size').value)\n    this.getsizearray.forEach(element => {\n      let formcontrol = new FormControl();\n      this.createproductform.get(\"size\").push(formcontrol);\n    });\n    // console.log(this.createproductform.get('size').value)\n    let MultiPartFormData = new FormData();\n    MultiPartFormData.append('productname', this.createproductform.get('productname').value);\n    MultiPartFormData.append('productquantity', this.createproductform.get('productquantity').value);\n    MultiPartFormData.append('productprice', this.createproductform.get('productprice').value);\n    MultiPartFormData.append('description', this.createproductform.get('description').value);\n    MultiPartFormData.append('color', this.createproductform.get('color').value);\n    MultiPartFormData.append('companyname', this.createproductform.get('companyname').value);\n    MultiPartFormData.append('productcateogary', this.createproductform.get('productcateogary').value);\n    MultiPartFormData.append('size', this.createproductform.get('size').value);\n    this.imageArray.forEach(element => {\n      MultiPartFormData.append('images', element);\n    });\n    console.log(this.createproductform.get('size').value);\n    //  console.log(this.getsizearray)\n    this.ProductService.CreateProduct(MultiPartFormData).subscribe(ResponseFromBackend => {\n      console.log(ResponseFromBackend.Message);\n    });\n    this.createproductform.reset();\n    //   let sizeofproducts= this.createproductform.get('size');\n    // sizeofproducts.clear();\n    this.fileselect.nativeElement.value = null;\n    this.getsizearray = [];\n    this.imageArray = [];\n    this.checkBoxes?.forEach(element => {\n      element.nativeElement.checked = false;\n    });\n    // console.log(this.getsizearray);\n  }\n};\n\n__decorate([ViewChildren('checkBoxes')], ProductsComponent.prototype, \"checkBoxes\", void 0);\n__decorate([ViewChild('fileselect')], ProductsComponent.prototype, \"fileselect\", void 0);\nProductsComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})], ProductsComponent);\nexport { ProductsComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","ViewChildren","FormArray","FormControl","Validators","ProductsComponent","constructor","formBuilder","ProductService","buildform","createproductform","group","productname","required","minLength","maxLength","productquantity","pattern","productprice","description","color","companyname","productcateogary","size","getsize","event","target","checked","getsizearray","push","value","filter","getImages","filelength","files","length","forEach","file","imageArray","console","log","fileselect","nativeElement","createproduct","element","formcontrol","get","MultiPartFormData","FormData","append","CreateProduct","subscribe","ResponseFromBackend","Message","reset","checkBoxes","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/mohsin/Desktop/MyFinalProject/FrontEnd/src/app/admin-module/admin-module-components/products/products.component.ts"],"sourcesContent":["import { Component, ElementRef, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n// import { ConsoleReporter } from 'jasmine';\nimport { ProductService } from 'src/app/Shared/Services/product.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent {\n  @ViewChildren('checkBoxes') checkBoxes:QueryList<Element> | any;\n  @ViewChild('fileselect') fileselect:ElementRef | any ;\n\n\n  selectsize=[\"S\",\"M\",\"L\",\"XL\"];\n  cateogaries=[\"Stationary\",\"Bags\",\"Others\"]\n  selectcolor=[\"Red\",\"Green\",\"Yellow\",\"Blue\"]\n  createproductform: FormGroup | any;\n  getsizearray:any=[]\n  imageArray:any=[];\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private ProductService:ProductService\n  ){this.buildform()}\n\nbuildform(){\n  this.createproductform = this.formBuilder.group({\n    productname: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]),\n    productquantity: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\n    productprice: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\n    description: new FormControl('', Validators.required),\n    color: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z]+$/)]),\n    companyname: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z]+$/)]),\n    productcateogary: new FormControl('', Validators.required),\n    size: new FormArray([]),\n    // productMaterial: new FormControl('', Validators.required)\n  })\n}\ngetsize(event:any){\n    // this.createproductform.reset();\n  event.target.checked ? this.getsizearray.push(event.target.value) : this.getsizearray.filter((value:any)=>value!=event.target.value) ;\n  // console.log(event);\n}\n\ngetImages(event:any){\n  let filelength= event.target.files.length;\n  if(filelength<=5){\n    [...event.target.files].forEach(file=>this.imageArray.push(file));\n    console.log(this.imageArray);\n    console.log(this.fileselect)\n  } else {\n    this.imageArray=[];\n    this.fileselect.nativeElement.value=null;\n\n  }\n}\n  createproduct(){\n    //creating form controls for every size\n    // console.log(this.getsizearray)\n    // console.log(this.createproductform.get('size').value)\n    this.getsizearray.forEach((element:String) => {\n      let formcontrol=new FormControl;\n      this.createproductform.get(\"size\").push(formcontrol);\n    });\n    // console.log(this.createproductform.get('size').value)\n    let MultiPartFormData=new FormData();\n    MultiPartFormData.append('productname',this.createproductform.get('productname').value);\n    MultiPartFormData.append('productquantity',this.createproductform.get('productquantity').value);\n    MultiPartFormData.append('productprice',this.createproductform.get('productprice').value);\n    MultiPartFormData.append('description',this.createproductform.get('description').value);\n    MultiPartFormData.append('color',this.createproductform.get('color').value);\n    MultiPartFormData.append('companyname',this.createproductform.get('companyname').value);\n    MultiPartFormData.append('productcateogary',this.createproductform.get('productcateogary').value);\n    MultiPartFormData.append('size',this.createproductform.get('size').value);\n    this.imageArray.forEach((element:any) => {\n      MultiPartFormData.append('images',element);\n      \n    });\n    console.log(this.createproductform.get('size').value)\n//  console.log(this.getsizearray)\n    this.ProductService.CreateProduct(MultiPartFormData).subscribe((ResponseFromBackend:any)=>{\n      console.log(ResponseFromBackend.Message)\n    })\n\n\n    this.createproductform.reset();\n  //   let sizeofproducts= this.createproductform.get('size');\n  // sizeofproducts.clear();\n  this.fileselect.nativeElement.value=null;\n\n  this.getsizearray=[];\n  this.imageArray=[]\n  this.checkBoxes?.forEach((element:any) => {\n    element.nativeElement.checked = false;\n  })\n  // console.log(this.getsizearray);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}