{"ast":null,"code":"import { FormArray, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Shared/Services/product.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"fileselect\"];\nconst _c1 = [\"checkBoxes\"];\nfunction ProductsComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"input\", 21, 22);\n    i0.ɵɵlistener(\"click\", function ProductsComponent_ng_container_17_Template_input_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.getsize($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", item_r4)(\"value\", item_r4)(\"id\", item_r4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"for\", item_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r4, \" \");\n  }\n}\nfunction ProductsComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r8);\n  }\n}\nfunction ProductsComponent_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cateogary_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cateogary_r9, \" \");\n  }\n}\nexport class ProductsComponent {\n  constructor(formBuilder, ProductService) {\n    this.formBuilder = formBuilder;\n    this.ProductService = ProductService;\n    this.selectsize = [\"S\", \"M\", \"L\", \"XL\"];\n    this.cateogaries = [\"Stationary\", \"Bags\", \"Others\"];\n    this.selectcolor = [\"Red\", \"Green\", \"Yellow\", \"Blue\"];\n    this.getsizearray = [];\n    this.imageArray = [];\n    this.buildform();\n  }\n  buildform() {\n    this.createproductform = this.formBuilder.group({\n      productname: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]),\n      productquantity: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\n      productprice: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\n      description: new FormControl('', Validators.required),\n      color: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z]+$/)]),\n      companyname: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z]+$/)]),\n      productcateogary: new FormControl('', Validators.required),\n      size: new FormArray([])\n      // productMaterial: new FormControl('', Validators.required)\n    });\n  }\n\n  getsize(event) {\n    // this.createproductform.reset();\n    event.target.checked ? this.getsizearray.push(event.target.value) : this.getsizearray.filter(value => value != event.target.value);\n    // console.log(event);\n  }\n\n  getImages(event) {\n    let filelength = event.target.files.length;\n    if (filelength <= 5) {\n      [...event.target.files].forEach(file => this.imageArray.push(file));\n      console.log(this.imageArray);\n      console.log(this.fileselect);\n    } else {\n      this.imageArray = [];\n      this.fileselect.nativeElement.value = null;\n    }\n  }\n  createproduct() {\n    //creating form controls for every size\n    // console.log(this.getsizearray)\n    // console.log(this.createproductform.get('size').value)\n    this.getsizearray.forEach(element => {\n      let formcontrol = new FormControl();\n      this.createproductform.get(\"size\").push(formcontrol);\n    });\n    // console.log(this.createproductform.get('size').value)\n    let MultiPartFormData = new FormData();\n    MultiPartFormData.append('productname', this.createproductform.get('productname').value);\n    MultiPartFormData.append('productquantity', this.createproductform.get('productquantity').value);\n    MultiPartFormData.append('productprice', this.createproductform.get('productprice').value);\n    MultiPartFormData.append('description', this.createproductform.get('description').value);\n    MultiPartFormData.append('color', this.createproductform.get('color').value);\n    MultiPartFormData.append('companyname', this.createproductform.get('companyname').value);\n    MultiPartFormData.append('productcateogary', this.createproductform.get('productcateogary').value);\n    MultiPartFormData.append('size', this.createproductform.get('size').value);\n    this.imageArray.forEach(element => {\n      MultiPartFormData.append('images', element);\n    });\n    console.log(this.getsizearray);\n    console.log(this.createproductform.get('size').value);\n    //  console.log(this.getsizearray)\n    this.ProductService.CreateProduct(MultiPartFormData).subscribe(ResponseFromBackend => {\n      console.log(ResponseFromBackend.Message);\n    });\n    this.createproductform.reset();\n    //   let sizeofproducts= this.createproductform.get('size');\n    // sizeofproducts.clear();\n    this.fileselect.nativeElement.value = null;\n    this.getsizearray = [];\n    this.imageArray = [];\n    this.checkBoxes?.forEach(element => {\n      element.nativeElement.checked = false;\n    });\n    // console.log(this.getsizearray);\n  }\n}\n\nProductsComponent.ɵfac = function ProductsComponent_Factory(t) {\n  return new (t || ProductsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductService));\n};\nProductsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductsComponent,\n  selectors: [[\"app-products\"]],\n  viewQuery: function ProductsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileselect = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkBoxes = _t);\n    }\n  },\n  decls: 39,\n  vars: 4,\n  consts: [[1, \"container\", \"mt-5\", \"d-flex\", \"justify-content-center\"], [1, \"row\", \"g-3\", \"w-50\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-12\", \"text-center\", \"my-3\"], [1, \"bg-dark\", \"text-white\", \"p-3\"], [1, \"col-md-6\"], [\"type\", \"text\", \"id\", \"productname\", \"placeholder\", \"Product Name\", \"formControlName\", \"productname\", 1, \"form-control\"], [\"type\", \"number\", \"id\", \"productquantity\", \"placeholder\", \"Product Quantity\", \"formControlName\", \"productquantity\", 1, \"form-control\"], [\"type\", \"number\", \"id\", \"productprice\", \"placeholder\", \"Product Price\", \"formControlName\", \"productprice\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"companyname\", \"placeholder\", \"Company Name\", \"formControlName\", \"companyname\", 1, \"form-control\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [\"for\", \"inputState\", 1, \"form-label\"], [\"id\", \"inputState\", \"formControlName\", \"color\", 1, \"form-select\"], [1, \"form-group\", \"col-md-12\"], [\"rows\", \"5\", \"id\", \"comment\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"formFileMultiple\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"formFileMultiple\", \"multiple\", \"\", 1, \"form-control\", 3, \"change\"], [\"fileselect\", \"\"], [\"id\", \"inputState\", \"formControlName\", \"productcateogary\", 1, \"form-select\"], [1, \"col-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", \"mt-3\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"name\", \"value\", \"id\", \"click\"], [\"checkBoxes\", \"\"], [1, \"form-check-label\", \"mx-2\", 3, \"for\"]],\n  template: function ProductsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function ProductsComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.createproduct();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Add New Product\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4);\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4);\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"Label\");\n      i0.ɵɵtext(15, \"Select Size\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵtemplate(17, ProductsComponent_ng_container_17_Template, 5, 5, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 10)(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Select Color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"select\", 12);\n      i0.ɵɵtemplate(23, ProductsComponent_option_23_Template, 2, 1, \"option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 13);\n      i0.ɵɵelement(25, \"textarea\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 15);\n      i0.ɵɵtext(28, \"Select Images\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 16, 17);\n      i0.ɵɵlistener(\"change\", function ProductsComponent_Template_input_change_29_listener($event) {\n        return ctx.getImages($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 4)(32, \"label\", 11);\n      i0.ɵɵtext(33, \"Select Cateogary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"select\", 18);\n      i0.ɵɵtemplate(35, ProductsComponent_option_35_Template, 2, 1, \"option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 19)(37, \"button\", 20);\n      i0.ɵɵtext(38, \"Create Product\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.createproductform);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectsize);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.selectcolor);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cateogaries);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormArray","FormControl","Validators","i0","ProductsComponent","constructor","formBuilder","ProductService","buildform","createproductform","group","productname","required","minLength","maxLength","productquantity","pattern","productprice","description","color","companyname","productcateogary","size","getsize","event","target","checked","getsizearray","push","value","filter","getImages","filelength","files","length","forEach","file","imageArray","console","log","fileselect","nativeElement","createproduct","element","formcontrol","get","MultiPartFormData","FormData","append","CreateProduct","subscribe","ResponseFromBackend","Message","reset","checkBoxes","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/home/mohsin/Desktop/MyFinalProject/FrontEnd/src/app/admin-module/admin-module-components/products/products.component.ts","/home/mohsin/Desktop/MyFinalProject/FrontEnd/src/app/admin-module/admin-module-components/products/products.component.html"],"sourcesContent":["import { Component, ElementRef, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n// import { ConsoleReporter } from 'jasmine';\nimport { ProductService } from 'src/app/Shared/Services/product.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent {\n  @ViewChildren('checkBoxes') checkBoxes:QueryList<Element> | any;\n  @ViewChild('fileselect') fileselect:ElementRef | any ;\n\n\n  selectsize=[\"S\",\"M\",\"L\",\"XL\"];\n  cateogaries=[\"Stationary\",\"Bags\",\"Others\"]\n  selectcolor=[\"Red\",\"Green\",\"Yellow\",\"Blue\"]\n  createproductform: FormGroup | any;\n  getsizearray:any=[]\n  imageArray:any=[];\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private ProductService:ProductService\n  ){this.buildform()}\n\nbuildform(){\n  this.createproductform = this.formBuilder.group({\n    productname: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]),\n    productquantity: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\n    productprice: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]*$/)]),\n    description: new FormControl('', Validators.required),\n    color: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z]+$/)]),\n    companyname: new FormControl('', [Validators.required, Validators.pattern(/^[A-Za-z]+$/)]),\n    productcateogary: new FormControl('', Validators.required),\n    size: new FormArray([]),\n    // productMaterial: new FormControl('', Validators.required)\n  })\n}\ngetsize(event:any){\n    // this.createproductform.reset();\n  event.target.checked ? this.getsizearray.push(event.target.value) : this.getsizearray.filter((value:any)=>value!=event.target.value) ;\n  // console.log(event);\n}\n\ngetImages(event:any){\n  let filelength= event.target.files.length;\n  if(filelength<=5){\n    [...event.target.files].forEach(file=>this.imageArray.push(file));\n    console.log(this.imageArray);\n    console.log(this.fileselect)\n  } else {\n    this.imageArray=[];\n    this.fileselect.nativeElement.value=null;\n\n  }\n}\n  createproduct(){\n    //creating form controls for every size\n    // console.log(this.getsizearray)\n    // console.log(this.createproductform.get('size').value)\n    this.getsizearray.forEach((element:String) => {\n      let formcontrol=new FormControl;\n      this.createproductform.get(\"size\").push(formcontrol);\n    });\n    // console.log(this.createproductform.get('size').value)\n    let MultiPartFormData=new FormData();\n    MultiPartFormData.append('productname',this.createproductform.get('productname').value);\n    MultiPartFormData.append('productquantity',this.createproductform.get('productquantity').value);\n    MultiPartFormData.append('productprice',this.createproductform.get('productprice').value);\n    MultiPartFormData.append('description',this.createproductform.get('description').value);\n    MultiPartFormData.append('color',this.createproductform.get('color').value);\n    MultiPartFormData.append('companyname',this.createproductform.get('companyname').value);\n    MultiPartFormData.append('productcateogary',this.createproductform.get('productcateogary').value);\n    MultiPartFormData.append('size',this.createproductform.get('size').value);\n    this.imageArray.forEach((element:any) => {\n      MultiPartFormData.append('images',element);\n      \n    });\n    console.log(this.getsizearray)\n    console.log(this.createproductform.get('size').value)\n//  console.log(this.getsizearray)\n    this.ProductService.CreateProduct(MultiPartFormData).subscribe((ResponseFromBackend:any)=>{\n      console.log(ResponseFromBackend.Message)\n    })\n\n\n    this.createproductform.reset();\n  //   let sizeofproducts= this.createproductform.get('size');\n  // sizeofproducts.clear();\n  this.fileselect.nativeElement.value=null;\n\n  this.getsizearray=[];\n  this.imageArray=[]\n  this.checkBoxes?.forEach((element:any) => {\n    element.nativeElement.checked = false;\n  })\n  // console.log(this.getsizearray);\n  }\n}\n","<div class=\"container mt-5 d-flex justify-content-center\">\n    <form class=\"row g-3 w-50 \" [formGroup]=\"createproductform\" (ngSubmit)=\"createproduct()\">\n        <div class=\"col-12 text-center my-3\">\n            <h1 class=\"bg-dark text-white p-3\">Add New Product</h1>\n          </div>\n        <div class=\"col-md-6\">\n          <input type=\"text\" class=\"form-control\" id=\"productname\" placeholder=\"Product Name\" formControlName=\"productname\">\n        </div>\n        <div class=\"col-md-6\">\n          <input type=\"number\" class=\"form-control\" id=\"productquantity\" placeholder=\"Product Quantity\" formControlName=\"productquantity\">\n        </div>\n        <div class=\"col-md-6\">\n            <input type=\"number\" class=\"form-control\" id=\"productprice\" placeholder=\"Product Price\" formControlName=\"productprice\">\n          </div> \n          <div class=\"col-md-6\">\n            <input type=\"text\" class=\"form-control\" id=\"companyname\" placeholder=\"Company Name\" formControlName=\"companyname\">\n          </div>\n        \n        <div class=\"col-md-6\">\n          <Label>Select Size</Label> <br>\n          <ng-container *ngFor=\"let item of selectsize\" >\n            <input #checkBoxes type=\"checkbox\" class=\"form-check-input\" [name]=\"item\" [value]=\"item\" [id]=\"item\" (click)=\"getsize($event)\"/>\n            <label class=\"form-check-label mx-2\" [for]=\"item\">\n              {{item}}\n            </label>\n          </ng-container>\n        </div>\n        <div class=\"col-md-4\">\n            <label for=\"inputState\" class=\"form-label\">Select Color</label><br>\n          \n          <select id=\"inputState\" class=\"form-select\" formControlName=\"color\">\n            <option *ngFor=\"let item of selectcolor\">{{item}}</option>\n            <!-- <option>Yellow</option> -->\n          </select>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <textarea class=\"form-control\" rows=\"5\" id=\"comment\" formControlName=\"description\"></textarea>\n          </div> \n\n          <div class=\" col-md-6  \">\n            <label for=\"formFileMultiple\" class=\"form-label\">Select Images</label>\n            <input class=\"form-control\" type=\"file\" id=\"formFileMultiple\" multiple #fileselect (change)=\"getImages($event)\">\n          </div>\n\n          \n          <div class=\"col-md-6\">\n            <label for=\"inputState\" class=\"form-label\">Select Cateogary</label>\n            <select id=\"inputState\" class=\"form-select\" formControlName=\"productcateogary\">\n              <option *ngFor=\"let cateogary of cateogaries\"> {{cateogary}} </option>\n              <!-- <option>Yellow</option> -->\n            </select>\n          </div> \n\n        <div class=\"col-12\">\n          <button type=\"submit\" class=\"btn btn-primary w-100 mt-3\">Create Product</button>\n        </div>\n      </form>\n    \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}